#!/bin/bash

get_sign() {
  local SIGN="${1:0:1}"
  
  case $SIGN in
   '>') echo ">=" ;;
   '<') echo "<=" ;;
   '=') echo "="  ;;
   *)   return 0  ;;
  esac
}

get_dep_name() {
  local DEP=""
  local NAME=""
  
  case `get_sign $1` in
    '>='|'<=') DEP="${1:2}" ;;
    '=')       DEP="${1:1}" ;;
    *)         DEP="$1"     ;;
  esac
  
  NAME="`expr "$DEP" : '\([a-zA-Z0-9_+\-]\+\)\-[0-9]'`"
  
  if [ ! "$NAME" = "" ]
  then
    echo "$NAME"
  else
    echo "$1"
  fi
}

get_dep_version() {
  local DEP=""
  local NAME=""
  local LENGTH
  
  case `get_sign $1` in
    '>='|'<=') DEP="${1:2}" ;;
    '=')       DEP="${1:1}" ;;
    *)         DEP="$1"     ;;
  esac
  
  NAME=`get_dep_name $1`
  LENGTH="${#NAME}"
  
  LENGTH=$[$LENGTH+1]
  
  echo "${DEP:$LENGTH}"
}

get_dep_only_version() {
  local VERSION=`get_dep_version $1`
  
  if [ -n "$VERSION" ]
  then
    local INDEX="`expr index $VERSION '_'`"
    
    if [ "$INDEX" -gt "0" ]
    then
      echo "`echo $VERSION | cut -f 1 -d '_'`"
    else
      echo $VERSION
    fi
  else
    return 0
  fi
}  

get_dep_extra_version() {
  local VERSION=`get_dep_version $1`
  
  if [ -n "$VERSION" ]
  then
    local INDEX="`expr index $VERSION '_'`"
    
    if [ "$INDEX" -gt "0" ]
    then
      echo "`echo $VERSION | cut -f 2 -d '_'`"
    else
      return 0
    fi
  else
    return 0
  fi

}

compare_versions() {
  local VERSION1=`get_dep_only_version $1`
  local VERSION2=`get_dep_only_version $2`
    
  local TMP1 TMP2
  
  for FIELD in 1 2 3 4 5 6 7 8 9 10
  do
    TMP1="`echo $VERSION1 | cut -f $FIELD -d '.'`"
    TMP2="`echo $VERSION2 | cut -f $FIELD -d '.'`"
    
    if [ "$TMP1" = "" -a "$TMP2" = "" ]
    then
      break
    elif [ "$TMP1" = "" -a "$TMP2" != "" ]
    then
      return 2
    elif [ "$TMP1" != "" -a "$TMP2" = "" ]
    then
      return 1
    fi
    
    if echo $TMP1 | grep -q "[a-zA-Z]\+" ||
       echo $TMP2 | grep -q "[a-zA-Z]\+"
    then
      if [[ "$TMP2" < "$TMP1" ]]
      then
        return 1
      elif [[ "$TMP2" > "$TMP1" ]]
      then
        return 2
      else
        continue
      fi
    else
      if [ "$TMP2" -lt "$TMP1" ]
      then
        return 1
      elif [ "$TMP2" -gt "$TMP1" ]
      then
        return 2
      else
        continue
      fi
    fi
  done
  
  local EXTRA1=`get_dep_extra_version $1`
  local EXTRA2=`get_dep_extra_version $2`
  
  if [ "$EXTRA1" != "" -o "$EXTRA2" != "" ]
  then
    if [ "$EXTRA1" = "" -a "$EXTRA2" != "" ]
    then
      return 1
    elif [ "$EXTRA1" != "" -a "$EXTRA2" = "" ]
    then
      return 2
    fi
    
    if echo $EXTRA1 | grep -q "[a-zA-Z]\+" ||
       echo $EXTRA2 | grep -q "[a-zA-Z]\+"
    then
      if [[ "$EXTRA2" < "$EXTRA1" ]]
      then
        return 1
      elif [[ "$EXTRA2" > "$EXTRA1" ]]
      then
        return 2
      fi
    else
      if [ "$EXTRA2" -lt "$EXTRA1" ]
      then
        return 1
      elif [ "$EXTRA2" -gt "$EXTRA1" ]
      then
        return 2
      fi
    fi
  fi
  
  return 0      
}  

get_installed_dep() {
  if pkg_is_installed $1
  then
    local PKG=`ls ${ROOT}${DATABASEDIR}/db/$1-*-*-* 2>/dev/null | grep "$1\-[0-9]"`
    local PKG="${PKG##*/}"
    
    echo "`pkgname $PKG`-`pkgversion $PKG`"
  else
    return 1
  fi
}

check_depend() {
  # If we have a virtual package then return 0
  # if it is installed.
  if [ -e $DATABASEDIR/virtual/$1 ]
  then
    return 0
  elif pkg_is_installed `get_dep_name $1`
  then
    if get_sign $1 | grep -q '='
    then
      local DEPNAME=`get_dep_name $1`
      local DEPVER=`get_dep_version $1`
      local DEP="${DEPNAME}-${DEPVER}"
      local IDEP=`get_installed_dep $DEPNAME`
      
#      echo "get_sign $1:`get_sign $1`"
      
      case `get_sign $1` in
        '>=')
           compare_versions $DEP $IDEP
           if [ $? -ne 2 -a $? -ne 0 ]
	   then
	     return 1
	   fi
	   ;;
	'<=')
	   compare_versions $DEP $IDEP
	   if [ $? -ne 1 -a $? -ne 0 ]
	   then
	     return 1
	   fi
	   ;;
	'=')
	  compare_versions $DEP $IDEP
	  if [ $? -ne 0 ]
	  then
	    return 1
	  fi
	  ;;
      esac
    else
      return 0
    fi
  else
    return 1
  fi
}
