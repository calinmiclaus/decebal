#!/bin/bash

write_screen_configuration() {
  cat << EOF > $TMP/screen_configuration
Section "Screen"
  Identifier  "Screen0"
  Device      "Card0"
  Monitor     "Monitor0"
  DefaultDepth $COLORDEPTH
  
  Subsection "Display"
     Depth       8
     Modes       "$RESOLUTION"
     ViewPort    0 0
  EndSubsection
  Subsection "Display"
     Depth       16
     Modes       "$RESOLUTION"
     ViewPort    0 0
  EndSubsection
  Subsection "Display"
     Depth       24
     Modes       "$RESOLUTION"
     ViewPort    0 0
  EndSubsection
EndSection
EOF
  dialog --backtitle "$BACKTITLE" \
         --title " $TITLE " \
	 --ok-label "Back" \
         --msgbox "`cat $TMP/screen_configuration`" 20 50
  if [ $? -eq 0 ]
  then
    main
  else
    handle_exit "write_screen_configuration()" "ESC pressed." "$LINENO" "1"
  fi				    												
}

write_resolution_function() {
  cat << EOF > $TMP/resolution_function
configure_resolution() {
  dialog --backtitle "$BACKTITLE" \\
         --title "$TITLE" \\
	 --ok-label "Select" \\
	 --cancel-label "Exit" \\
	 --extra-button \\
	 --extra-label "Back" \\
	 --menu \
"\\n  Select video modes for this screen:" 0 0 0 \\
EOF
  if [ -n "$MODES" ]
  then
    local COUNTER=0
    local LASTMODE=`cat -n $TMP/modes | tail -n 1 | awk '{print $1}'`
    for MODE in `cat $TMP/modes`
    do
      COUNTER=$(($COUNTER + 1))
      if [ ! "$COUNTER" = "$LASTMODE" ]
      then
        echo "\"$MODE\" \"\" \\" >> $TMP/resolution_function
      else
        echo "\"$MODE\" \"\" 2>$TMP/resolution" >> $TMP/resolution_function
      fi
    done
  else
    local COUNTER=0
    for MODE in 320x200 320x240 400x300 512x384 640x400 640x480 800x600 1024x768 1152x864 1280x1024 1400x1050 1600x1200 1800x1400
    do
      COUNTER=$(($COUNTER + 1))
      if [ ! "$COUNTER" = "13" ]
      then
        echo "\"$MODE\" \"\" \\" >> $TMP/resolution_function
      else
        echo "\"$MODE\" \"\" 2>$TMP/resolution" >> $TMP/resolution_function
      fi
    done	         
  fi
cat << EOF >> $TMP/resolution_function
  local RETVAL=\$?
  local SELECTION=\`cat $TMP/resolution\`
  case "\$RETVAL" in
    0) 
      RESOLUTION="\$SELECTION"
      write_screen_configuration
      ;;
    1) handle_exit "configure_resolution()" "Exit pressed." "\$LINENO" "1" ;;
    3) configure_screen ;;
   -1) handle_exit "configure_resolution()" "ESC pressed." "\$LINENO" "1" ;;
  esac
}
EOF
  . $TMP/resolution_function
  configure_resolution
}

configure_screen() {
  local AVAILABLE MODES="`cat $TMP/modes`"

  dialog --backtitle "$BACKTITLE" \
         --title " $TITLE " \
	 --ok-label "Configure" \
	 --cancel-label "Exit" \
	 --extra-button \
	 --extra-label "Back" \
	 --help-button \
	 --menu \
"\n  Please specify which color depth you want to use by default." 12 60 3 \
"8" "256 colors (8-bit)" \
"16" "32K/64K colors (16-bit)" \
"24" "16Mb colors (24-bit)" 2> $TMP/color_depth
  local RETVAL=$?
  local SELECTION=`cat $TMP/color_depth`
  case "$RETVAL" in
    0) 
       COLORDEPTH=`cat $TMP/color_depth`
       write_resolution_function
       ;;
    1) handle_exit "configure_screen()" "Exit pressed." "$LINENO" "1" ;;
    2) show_modes_help ;;
    3) main ;;
   -1) handle_exit "configure_screen()" "ESC pressed." "$LINENO" "1" ;;    
  esac
}
