diff -Naur svgalib-1.9.21/kernel/svgalib_helper/kernel26compat.h svgalib-1.9.21-decebal/kernel/svgalib_helper/kernel26compat.h
--- svgalib-1.9.21/kernel/svgalib_helper/kernel26compat.h	2005-04-17 09:13:27.000000000 +0000
+++ svgalib-1.9.21-decebal/kernel/svgalib_helper/kernel26compat.h	2005-05-19 04:52:31.000000000 +0000
@@ -10,7 +10,7 @@
 # define PCI_GET_CLASS pci_find_class
 # define PCI_GET_DEVICE pci_find_device
 
-# if defined (PG_chainlock)
+# if LINUX_VERSION_CODE >= KERNEL_VERSION(2,5,3)
 #  define my_io_remap_page_range(vma, start, ofs, len, prot) \
 		io_remap_page_range(vma,start,ofs,len,prot)
 # else
diff -Naur svgalib-1.9.21/kernel/svgalib_helper/kernel26compat.h~ svgalib-1.9.21-decebal/kernel/svgalib_helper/kernel26compat.h~
--- svgalib-1.9.21/kernel/svgalib_helper/kernel26compat.h~	1970-01-01 00:00:00.000000000 +0000
+++ svgalib-1.9.21-decebal/kernel/svgalib_helper/kernel26compat.h~	2005-04-17 09:13:27.000000000 +0000
@@ -0,0 +1,137 @@
+#ifndef KERNEL_VERSION
+# include <linux/version.h>
+#endif
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,0)
+
+# ifdef KERNEL_2_6
+#  undef KERNEL_2_6
+# endif
+
+# define PCI_GET_CLASS pci_find_class
+# define PCI_GET_DEVICE pci_find_device
+
+# if defined (PG_chainlock)
+#  define my_io_remap_page_range(vma, start, ofs, len, prot) \
+		io_remap_page_range(vma,start,ofs,len,prot)
+# else
+#  ifdef __alpha__ /* Is alpha really the issue here ??? */
+#   define my_io_remap_page_range(vma, start, ofs, len, prot) \
+		   remap_page_range(start,ofs,len,prot)
+#  else
+#   define my_io_remap_page_range(vma, start, ofs, len, prot) \
+		   io_remap_page_range(start,ofs,len,prot)
+#  endif
+# endif
+# ifndef IRQ_HANDLED 
+typedef void irqreturn_t;
+#  define IRQ_NONE
+#  define IRQ_HANDLED
+# endif
+
+#else /* Kernel 2.6 */
+
+#define NO_TASK
+
+# ifndef KERNEL_2_6
+#  define KERNEL_2_6
+# endif
+
+/* WHY ? */
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,10)
+# define PCI_GET_CLASS pci_find_class
+# define PCI_GET_DEVICE pci_find_device
+# define DEVFS_MK_SYMLINK(a,b) devfs_mk_symlink(a,b)
+#else
+# define PCI_GET_CLASS pci_get_class
+# define PCI_GET_DEVICE pci_get_device
+# define DEVFS_MK_SYMLINK(a,b)
+#endif
+
+# define my_io_remap_page_range(vma, start, ofs, len, prot) \
+		io_remap_page_range(vma,start,ofs,len,prot)
+
+# define pci_present() 1
+
+# ifdef CONFIG_DEVFS_FS
+typedef void* devfs_handle_t;
+# endif
+
+#endif
+
+/* These are also not present in 2.6 kernels ... */
+#if (!defined _LINUX_DEVFS_FS_KERNEL_H) || (defined KERNEL_2_6)
+static inline int devfs_register_chrdev (unsigned int major, const char *name,
+                                         struct file_operations *fops)
+{
+    return register_chrdev (major, name, fops);
+}
+static inline int devfs_unregister_chrdev (unsigned int major,const char *name)
+{
+    return unregister_chrdev (major, name);
+}
+#endif
+
+#if defined(KERNEL_2_6) && !defined(CONFIG_DEVFS_FS)
+
+# if !defined(CLASS_SIMPLE) /* no class_simple */
+
+# define K_CLASS class
+#  define SLH_SYSFS_REGISTER                                            \
+     svgalib_helper_class = class_create(THIS_MODULE, "svgalib_helper");
+
+#  define SLH_SYSFS_ADD_CONTROL                                         \
+     class_device_create(svgalib_helper_class,                      	\
+                             MKDEV(SVGALIB_HELPER_MAJOR, 0),            \
+                             NULL, "svga");
+
+#  define SLH_SYSFS_ADD_DEVICE(_name, _minor)                           \
+     class_device_create(svgalib_helper_class,                      	\
+                             MKDEV(SVGALIB_HELPER_MAJOR, _minor),       \
+                             &sh_pci_devs[_minor]->dev->dev, _name);
+
+#  define SLH_SYSFS_REMOVE_DEVICE(i)                                    \
+     class_destroy(svgalib_helper_class);
+
+#  define SLH_SYSFS_UNREGISTER                                          \
+     class_destroy(svgalib_helper_class);
+
+# else /* class_simple */
+
+# define K_CLASS class_simple
+#  define SLH_SYSFS_REGISTER                                            \
+     svgalib_helper_class = class_simple_create(THIS_MODULE, "svgalib_helper");
+
+#  define SLH_SYSFS_ADD_CONTROL                                         \
+     class_simple_device_add(svgalib_helper_class,                      \
+                             MKDEV(SVGALIB_HELPER_MAJOR, 0),            \
+                             NULL, "svga");
+
+#  define SLH_SYSFS_ADD_DEVICE(_name, _minor)                           \
+     class_simple_device_add(svgalib_helper_class,                      \
+                             MKDEV(SVGALIB_HELPER_MAJOR, _minor),       \
+                             &sh_pci_devs[_minor]->dev->dev, _name);
+
+#  define SLH_SYSFS_REMOVE_DEVICE(i)                                    \
+     class_simple_device_remove(MKDEV(SVGALIB_HELPER_MAJOR, i));
+
+#  define SLH_SYSFS_UNREGISTER                                          \
+     class_simple_destroy(svgalib_helper_class);
+# endif /* class_simple */
+
+#else
+#  define SLH_SYSFS_REGISTER
+#  define SLH_SYSFS_ADD_CONTROL
+#  define SLH_SYSFS_ADD_DEVICE(_name, _minor)
+#  define SLH_SYSFS_REMOVE_DEVICE(i)
+#  define SLH_SYSFS_UNREGISTER
+#endif
+
+#if (defined MINOR)
+# define my_minor(x) MINOR(x)
+#else
+# define my_minor(x) minor(x)
+#endif
+
+#if !defined(MODULE_VERSION) 
+# define MODULE_VERSION(x)
+#endif
diff -Naur svgalib-1.9.21/kernel/svgalib_helper/Makefile.alt svgalib-1.9.21-decebal/kernel/svgalib_helper/Makefile.alt
--- svgalib-1.9.21/kernel/svgalib_helper/Makefile.alt	2003-12-04 09:16:40.000000000 +0000
+++ svgalib-1.9.21-decebal/kernel/svgalib_helper/Makefile.alt	2005-05-19 04:52:31.000000000 +0000
@@ -37,7 +37,7 @@
 CFLAGS += -DSVGALIB_HELPER_MAJOR=$(SVGALIB_HELPER_MAJOR)
                                                                                                   
 ifeq (1,$(findstring 1,$(MODVER)))
-	CFLAGS += -DMODVERSIONS -include $(INCLUDEDIR)/linux/modversions.h
+	CFLAGS += -DMODVERSIONS -DCONFIG_MODVERSIONS=1
 endif
 
 TARGET = svgalib_helper
@@ -50,7 +50,8 @@
 	endif
 endif
 
-all: .depend $(OBJS)
+modules: $(OBJS)
+all: .depend modules
 
 $(TARGET).o: $(SRC:.c=.o)
 	$(LD) -r $^ -o $@
@@ -61,8 +62,8 @@
 install: device modules_install
 
 modules_install: $(OBJS)
-	mkdir -p /lib/modules/$(VER)/kernel/misc 
-	install -m 0644 -c $(OBJS) /lib/modules/$(VER)/kernel/misc
+	mkdir -p $(TOPDIR)/lib/modules/$(VER)/kernel/misc
+	install -m 0644 -c $(OBJS) $(TOPDIR)/lib/modules/$(VER)/kernel/misc
 
 device:
 	rm -f /dev/svgalib_helper* /dev/svga_helper* /dev/svga /dev/svga?
diff -Naur svgalib-1.9.21/kernel/svgalib_helper/Makefile.alt~ svgalib-1.9.21-decebal/kernel/svgalib_helper/Makefile.alt~
--- svgalib-1.9.21/kernel/svgalib_helper/Makefile.alt~	1970-01-01 00:00:00.000000000 +0000
+++ svgalib-1.9.21-decebal/kernel/svgalib_helper/Makefile.alt~	2003-12-04 09:16:40.000000000 +0000
@@ -0,0 +1,84 @@
+include ../../Makefile.cfg
+
+
+ifndef INCLUDEDIR
+INCLUDEDIR = /lib/modules/$(shell uname -r)/build/include
+endif
+
+MODVER = $(shell grep CONFIG_MODVERSIONS $(INCLUDEDIR)/linux/autoconf.h)
+
+ifeq ($(MODVER),)
+	@echo INCLUDEDIR is not set up correctly
+	exit 1
+endif
+
+# Extract version number from headers.
+VER = $(shell awk -F\" '/REL/ {print $$2}' $(INCLUDEDIR)/linux/version.h 2>/dev/null)
+
+# Use version of current running kernel
+ifeq ($(VER),)
+	VER = $(shell uname -r)
+endif
+
+VER_MAJOR = $(shell echo $(VER) | cut -d. -f1)
+VER_MINOR = $(shell echo $(VER) | cut -d. -f2)
+
+INCLUDES += -I$(INCLUDEDIR)
+INCLUDES += -I$(INCLUDEDIR)/asm/mach-default
+                                                                                                  
+CFLAGS = -O2 -DLINUX -Dlinux -D__KERNEL__ -DMODULE $(DEBFLAGS) 
+ifeq (2,$(VER_MAJOR))
+	ifeq (6,$(VER_MINOR))
+		CFLAGS += -DKBUILD_MODNAME="svgalib_helper"
+	endif
+endif
+
+CFLAGS += $(INCLUDES)
+CFLAGS += -DSVGALIB_HELPER_MAJOR=$(SVGALIB_HELPER_MAJOR)
+                                                                                                  
+ifeq (1,$(findstring 1,$(MODVER)))
+	CFLAGS += -DMODVERSIONS -include $(INCLUDEDIR)/linux/modversions.h
+endif
+
+TARGET = svgalib_helper
+OBJS = $(TARGET).o
+SRC = main.c interrupt.c i810.c virtual.c displaystart.c
+
+ifeq (2,$(VER_MAJOR))
+	ifeq (6,$(VER_MINOR))
+		OBJS = $(TARGET).ko
+	endif
+endif
+
+all: .depend $(OBJS)
+
+$(TARGET).o: $(SRC:.c=.o)
+	$(LD) -r $^ -o $@
+
+$(TARGET).ko: $(TARGET).o
+	$(LD) -d -r $^ -o $@
+
+install: device modules_install
+
+modules_install: $(OBJS)
+	mkdir -p /lib/modules/$(VER)/kernel/misc 
+	install -m 0644 -c $(OBJS) /lib/modules/$(VER)/kernel/misc
+
+device:
+	rm -f /dev/svgalib_helper* /dev/svga_helper* /dev/svga /dev/svga?
+	mknod -m 666 /dev/svga c $(SVGALIB_HELPER_MAJOR) 0
+	mknod -m 666 /dev/svga1 c $(SVGALIB_HELPER_MAJOR) 1
+	mknod -m 666 /dev/svga2 c $(SVGALIB_HELPER_MAJOR) 2
+	mknod -m 666 /dev/svga3 c $(SVGALIB_HELPER_MAJOR) 3
+	mknod -m 666 /dev/svga4 c $(SVGALIB_HELPER_MAJOR) 4
+
+clean:
+	rm -f *.ko *.o *~ core .depend *.bak *.orig
+
+depend .depend dep:
+	$(CC) $(CFLAGS) -M *.c > $@
+
+
+ifeq (.depend,$(wildcard .depend))
+include .depend
+endif
diff -Naur svgalib-1.9.21/Makefile svgalib-1.9.21-decebal/Makefile
--- svgalib-1.9.21/Makefile	2005-03-18 13:49:10.000000000 +0000
+++ svgalib-1.9.21-decebal/Makefile	2005-05-19 04:53:40.000000000 +0000
@@ -78,10 +78,6 @@
 
 installheaders:
 	@echo Installing header files in $(includedir).
-	@if [ -f /usr/include/vga.h ]; then \
-		rm -f /usr/include/vga.h /usr/include/vgagl.h; \
-		echo Old header files in /usr/include removed.; \
-	fi
 	@mkdir -p $(includedir)
 	@cp $(SRCDIR)/src/vga.h $(includedir)/vga.h
 	@chmod a+r $(includedir)/vga.h
@@ -95,16 +91,6 @@
 	@chmod a+r $(includedir)/vgakeyboard.h
 
 installsharedlib: $(SHAREDLIBS) $(SVGALIBSHAREDSTUBS)
-	@if [ -f /usr/lib/libvga.sa ]; then \
-		rm -f /usr/lib/libvga.sa /usr/lib/libvgagl.sa; \
-		echo Old stubs in /usr/lib removed.; \
-	fi
-ifndef KEEPSHAREDLIBS
-	@echo "Removing shared library images (old & current)..."
-	@for i in $(OBSOLETELDIRS); do \
-	    rm -f `echo $(OBSOLETESHAREDIMAGES) | sed s?/lib/?$$i?g`; \
-         done
-endif
 	@echo Installing shared library image as \
 		$(addprefix $(sharedlibdir)/,$(notdir $(SHAREDLIBS))).
 	@for foo in $(notdir $(SHAREDLIBS)); do \
@@ -112,16 +98,12 @@
 		(cd $(sharedlibdir); \
 		 ln -sf $$foo `echo $$foo | sed 's/\.so\..*/.so/'` ); \
 	done
-	@./fixldsoconf
-	@ldconfig
 
 installstaticlib: static
 	@echo Installing static libraries in $(libdir).
 	@mkdir -p $(libdir)
-	@rm -f /usr/lib/libvga.a
 	@$(INSTALL_DATA) staticlib/libvga.a $(libdir)/libvga.a
 	@chmod a+r $(libdir)/libvga.a
-	@rm -f /usr/lib/libvgagl.a
 	@$(INSTALL_DATA) staticlib/libvgagl.a $(libdir)/libvgagl.a
 	@chmod a+r $(libdir)/libvgagl.a
 
@@ -130,14 +112,6 @@
 		echo No $(bindir) directory, creating it.; \
 		mkdir -p $(bindir); \
 	fi
-	@if [ -f /usr/bin/restorefont ]; then \
-		echo Removing old utilities in /usr/bin.; \
-		for x in $(UTILS); do rm -f /usr/bin/$$x; done; \
-	fi
-	@if [ -f /usr/bin/convfont ]; then \
-		echo Removing inappropriate utilities in /usr/bin.; \
-		rm -f /usr/bin/convfont /usr/bin/setmclk; \
-	fi
 	@echo Installing textmode utilities in $(bindir):
 	@echo "restorefont:      Save/restore textmode font."
 	@$(INSTALL_PROGRAM) utils/restorefont $(bindir)
@@ -213,7 +187,7 @@
 lib3dkit-install:
 	(cd threeDKit/; $(MAKE) install)
 	 
-install: uninstall installheaders $(INSTALLSHAREDLIB) installconfig \
+install: installheaders $(INSTALLSHAREDLIB) installconfig \
 	$(INSTALLSTATICLIB) $(INSTALLUTILS) $(INSTALLMAN) $(INSTALLMODULE) $(INSTALLDEV) \
 	lib3dkit-install
 	@echo
diff -Naur svgalib-1.9.21/Makefile~ svgalib-1.9.21-decebal/Makefile~
--- svgalib-1.9.21/Makefile~	1970-01-01 00:00:00.000000000 +0000
+++ svgalib-1.9.21-decebal/Makefile~	2005-05-19 04:52:59.000000000 +0000
@@ -0,0 +1,362 @@
+#---------------------------------------------------------------------OU
+# Makefile for SVGAlib.
+#
+# It's pretty unreadable, but just doing make install should be
+# enough. This will install the header files and shared library first
+# (which is enough to compile things), after which the static version is
+# optionally compiled and installed (if it fails, the shared libraries
+# should still work fine).
+#
+#----------------------------------------------------------------------
+
+# *** NO SERVICIBLE PARTS HERE!
+#     All options are in Makefile.cfg.
+
+#include Makefile.ppc
+include Makefile.cfg
+
+#----------------------------------------------------------------------
+# Rules Section
+#----------------------------------------------------------------------
+
+# In case someone goes for the demos w/o installing svgalib make
+# the static libs first.
+ifdef INSTALLSHAREDLIB
+  PREDEMO =
+else
+  PREDEMO = static
+endif
+
+# A flag if this is a distribution:
+DISTRIBUTION = $(shell sh -c "echo sharedlib/DIST*")
+
+UTILS	= restorefont runx restorepalette restoretextmode textmode \
+	  savetextmode dumpreg fix132x43
+
+OBSOLETEHDIRS = /usr/include/ /usr/include/vga/ /usr/local/include/ /usr/local/include/vga/
+OBSOLETEBDIRS = /usr/bin/ /usr/local/bin/
+
+OBSOLETEHEADERS = /inc/vga.h /inc/vgakeyboard.h /inc/vgamouse.h /inc/vgagl.h /inc/vgajoystick.h
+
+OBSOLETELIBLINKS = /lib/libvga.so /lib/libvga.so.1 /lib/libvgagl.so /lib/libvgagl.so.1
+
+OBSOLETESHAREDIMAGES = /lib/libvga.so.1.* /lib/libvga.so
+
+# for ELF
+OBSOLETESHAREDIMAGES +=	/lib/libvgagl.so.1.* /lib/libvgagl.so
+
+OBSOLETELDIRS = /lib/ /usr/lib/ /usr/local/lib/ /usr/share/lib/ \
+		$(shell sed 's?\#.*$$??' /etc/ld.so.conf 2>/dev/null | \
+		  sed 's?\([^/]\)[ 	]*$$?\1/ ?' | grep -v aout/ )
+
+SHAREDLIBS = sharedlib/libvga.so.$(VERSION) sharedlib/libvgagl.so.$(VERSION)
+SVGALIBSHAREDSTUBS =
+JUMP =
+
+BACKUP   = ../svgalib-$(VERSION).tar.gz
+
+default:
+	@echo "To install SVGAlib, do one of the following:"
+	@echo ""
+	@echo "	make clean      - clean every thing. Do this after every change"
+	@echo "	                  of Makefile.cfg!"
+	@echo "	make install	- compile & install components specified in Makefile.cfg"
+	@echo "	make demoprogs	- make demo programs in demo/ and threeDKit/"
+	@echo ""
+	@echo "	make uninstall	- remove an existing installation from various"
+	@echo "	                  common places. (old traces often confuse the"
+	@echo "	                  compiler even when svgalib is not installed anew)"
+	@echo "	                  (make install includes an uninstall first)"
+	@echo ""
+	@echo "	Be sure to read the file 0-INSTALL!"
+	@echo ""
+
+.PHONY: default all install installheaders installconfig
+.PHONY: clean distclean indent uninstall
+.PHONY: force_remake remake_shared shared static
+.PHONY: indent-gnu 
+
+installheaders:
+	@echo Installing header files in $(includedir).
+	@if [ -f /usr/include/vga.h ]; then \
+		rm -f /usr/include/vga.h /usr/include/vgagl.h; \
+		echo Old header files in /usr/include removed.; \
+	fi
+	@mkdir -p $(includedir)
+	@cp $(SRCDIR)/src/vga.h $(includedir)/vga.h
+	@chmod a+r $(includedir)/vga.h
+	@cp $(SRCDIR)/gl/vgagl.h $(includedir)/vgagl.h
+	@chmod a+r $(includedir)/vgagl.h
+	@cp $(SRCDIR)/src/mouse/vgamouse.h $(includedir)/vgamouse.h
+	@chmod a+r $(includedir)/vgamouse.h
+	@cp $(SRCDIR)/src/joystick/vgajoystick.h $(includedir)/vgajoystick.h
+	@chmod a+r $(includedir)/vgajoystick.h
+	@cp $(SRCDIR)/src/keyboard/vgakeyboard.h $(includedir)/vgakeyboard.h
+	@chmod a+r $(includedir)/vgakeyboard.h
+
+installsharedlib: $(SHAREDLIBS) $(SVGALIBSHAREDSTUBS)
+	@if [ -f /usr/lib/libvga.sa ]; then \
+		rm -f /usr/lib/libvga.sa /usr/lib/libvgagl.sa; \
+		echo Old stubs in /usr/lib removed.; \
+	fi
+ifndef KEEPSHAREDLIBS
+	@echo "Removing shared library images (old & current)..."
+	@for i in $(OBSOLETELDIRS); do \
+	    rm -f `echo $(OBSOLETESHAREDIMAGES) | sed s?/lib/?$$i?g`; \
+         done
+endif
+	@echo Installing shared library image as \
+		$(addprefix $(sharedlibdir)/,$(notdir $(SHAREDLIBS))).
+	@for foo in $(notdir $(SHAREDLIBS)); do \
+		$(INSTALL_SHLIB) sharedlib/$$foo $(sharedlibdir)/$$foo; \
+		(cd $(sharedlibdir); \
+		 ln -sf $$foo `echo $$foo | sed 's/\.so\..*/.so/'` ); \
+	done
+
+installstaticlib: static
+	@echo Installing static libraries in $(libdir).
+	@mkdir -p $(libdir)
+	@rm -f /usr/lib/libvga.a
+	@$(INSTALL_DATA) staticlib/libvga.a $(libdir)/libvga.a
+	@chmod a+r $(libdir)/libvga.a
+	@rm -f /usr/lib/libvgagl.a
+	@$(INSTALL_DATA) staticlib/libvgagl.a $(libdir)/libvgagl.a
+	@chmod a+r $(libdir)/libvgagl.a
+
+installutils: textutils $(LRMI)
+	@if [ ! -d $(bindir) ]; then \
+		echo No $(bindir) directory, creating it.; \
+		mkdir -p $(bindir); \
+	fi
+	@if [ -f /usr/bin/restorefont ]; then \
+		echo Removing old utilities in /usr/bin.; \
+		for x in $(UTILS); do rm -f /usr/bin/$$x; done; \
+	fi
+	@if [ -f /usr/bin/convfont ]; then \
+		echo Removing inappropriate utilities in /usr/bin.; \
+		rm -f /usr/bin/convfont /usr/bin/setmclk; \
+	fi
+	@echo Installing textmode utilities in $(bindir):
+	@echo "restorefont:      Save/restore textmode font."
+	@$(INSTALL_PROGRAM) utils/restorefont $(bindir)
+	@echo "restorepalette:   Set standard VGA palette."
+	@$(INSTALL_PROGRAM) utils/restorepalette $(bindir)
+	@echo "dumpreg:          Write ASCII dump of SVGA registers."
+	@$(INSTALL_PROGRAM) utils/dumpreg $(bindir)
+	@echo "restoretextmode:  Save/restore textmode registers."
+	@$(INSTALL_PROGRAM) utils/restoretextmode $(bindir)
+	@echo "textmode:         Script that tries to restore textmode."
+	@$(INSTALL_SCRIPT) utils/textmode $(bindir)
+	@echo "savetextmode:     Script that saves textmode information used by 'textmode'."
+	@$(INSTALL_SCRIPT) utils/savetextmode $(bindir)
+ifeq ($(LRMI),lrmi)
+	@echo "mode3:       Restore textmode by setting VESA mode 3."
+	@$(INSTALL_PROGRAM) lrmi-0.6m/mode3 $(bindir)
+endif
+	@echo "Installing keymap utilities in $(bindir):"
+	@echo "svgakeymap:       Perl script that generates scancode conversion maps."
+	@$(INSTALL_SCRIPT) utils/svgakeymap $(bindir)
+
+installconfig:
+	@if [ ! -d $(datadir) ]; then \
+		echo Creating configuration directory $(datadir).; \
+		mkdir $(datadir); \
+		chmod go-w $(datadir); \
+	fi
+	@if [ \( -f /usr/local/lib/libvga.config -a ! -f $(datadir)/libvga.config \) ]; then \
+		echo "Moving old config file /usr/local/lib/libvga.config to $(datadir)." ; \
+		mv -f /usr/local/lib/libvga.config $(datadir)/libvga.config; \
+	fi
+	@if [ \( -f /usr/local/lib/libvga.et4000 -a ! -f $(datadir)/libvga.et4000 \) ]; then \
+		echo "Moving old config file /usr/local/lib/libvga.et4000 to $(datadir)." ; \
+		mv -f /usr/local/lib/libvga.et4000 $(datadir)/libvga.et4000; \
+	fi
+	@if [ \( -f /usr/local/lib/libvga.ega -a ! -f $(datadir)/libvga.ega \) ]; then \
+		echo "Moving old config file /usr/local/lib/libvga.ega to $(datadir)." ; \
+		mv -f /usr/local/lib/libvga.ega $(datadir)/libvga.ega; \
+	fi
+	@if [ \( -f /etc/mach32.eeprom -a ! -f $(datadir)/mach32.eeprom \) ]; then \
+		echo Consider moving your /etc/mach32.eeprom file to $(datadir) ; \
+		echo and changing $(datadir)/libvga.config appropriately. ; \
+	fi
+	@if [ ! -f $(datadir)/libvga.config ]; then \
+		echo Installing default configuration file in $(datadir).; \
+		cp $(CONFDIR)/libvga.config $(datadir)/libvga.config; \
+	fi
+	@if [ ! -f $(datadir)/libvga.et4000 ]; then \
+		echo Installing dynamically loaded ET4000 registers in $(datadir).; \
+		cp $(CONFDIR)/et4000.regs $(datadir)/libvga.et4000; \
+	fi
+	@if [ ! -f $(datadir)/default.keymap ]; then \
+		echo Installing default keymap file in $(datadir).; \
+		cp $(CONFDIR)/default.keymap $(datadir)/null.keymap; \
+	fi
+	@if [ ! -f $(datadir)/dvorak-us.keymap ]; then \
+		echo Installing Dvorak keymap file in $(datadir).; \
+		cp $(CONFDIR)/dvorak-us.keymap $(datadir)/dvorak-us.keymap; \
+	fi
+
+installman:
+	(cd doc; $(MAKE) -f $(SRCDIR)/doc/Makefile SRCDIR="$(SRCDIR)" install )
+
+installmodule:
+	(cd kernel/svgalib_helper ; $(MAKE) default modules_install )
+
+installmodule.alt:
+	(cd kernel/svgalib_helper ; $(MAKE) -f Makefile.alt modules_install )
+
+installdev:
+	(cd kernel/svgalib_helper ; $(MAKE) device )
+
+lib3dkit-install:
+	(cd threeDKit/; $(MAKE) install)
+	 
+install: uninstall installheaders $(INSTALLSHAREDLIB) installconfig \
+	$(INSTALLSTATICLIB) $(INSTALLUTILS) $(INSTALLMAN) $(INSTALLMODULE) $(INSTALLDEV) \
+	lib3dkit-install
+	@echo
+	@echo
+	@echo Now run "'make demoprogs'" to make the test and demo programs in
+	@echo demos/ and threedkit/.
+
+uninstall:
+	@echo "Removing textmode utilities..."
+	@for i in $(OBSOLETEBDIRS); do \
+          for prog in $(UTILS); do \
+            rm -f $$i$$prog ; \
+          done ; \
+         done
+	@echo "Removing shared library stubs (old & current)..."
+	@for i in $(OBSOLETELDIRS); do \
+	    rm -f `echo /lib/libvga.so.$(VERSION) /lib/libvgagl.so.$(VERSION) \
+			$(OBSOLETELIBLINKS) /lib/libvga.sa /lib/libvgagl.sa \
+		     | sed s?/lib/?$$i?g`; \
+         done
+ifndef KEEPSHAREDLIBS
+	@echo "Removing shared library images (old & current)..."
+	@for i in $(OBSOLETELDIRS); do \
+	    rm -f `echo $(OBSOLETESHAREDIMAGES) | sed s?/lib/?$$i?g`; \
+         done
+endif
+	@echo "Removing static libraries..."
+	@for i in $(OBSOLETELDIRS); do \
+	    rm -f `echo /lib/libvga.a /lib/libvgagl.a | sed s?/lib/?$$i?g`; \
+         done
+	@echo "Removing header files..."
+	@for i in $(OBSOLETEHDIRS); do \
+	    rm -f `echo $(OBSOLETEHEADERS) | sed s?/inc/?$$i?g`; \
+         done
+	(cd doc; $(MAKE) -f $(SRCDIR)/doc/Makefile SRCDIR="$(SRCDIR)" uninstall)
+	 
+
+SHAREDDIRS0 = sharedlib/mouse sharedlib/keyboard sharedlib/ramdac \
+		sharedlib/clockchip sharedlib/joystick \
+		sharedlib/drivers
+SHAREDDIRS = $(SHAREDDIRS0) $(JUMP)
+STATICDIRS = staticlib/mouse staticlib/keyboard staticlib/ramdac \
+		staticlib/clockchip staticlib/joystick \
+		staticlib/drivers
+UTILDIRS = utils
+DEMODIRS = demos threeDKit
+
+$(SHAREDDIRS0) $(STATICDIRS) $(DEMODIRS):
+	mkdir -p $@
+
+utils:
+	mkdir -p utils
+	if [ ! -f utils/runx ]; then \
+		cp $(SRCDIR)/utils/runx $(SRCDIR)/utils/savetextmode \
+		   $(SRCDIR)/utils/textmode utils; \
+	fi
+
+static: staticlib/libvga.a staticlib/libvgagl.a
+
+.PHONY: staticlib/libvgagl.a staticlib/libvga.a
+
+staticlib/libvgagl.a staticlib/libvga.a: $(STATICDIRS)
+	(cd $(dir $@); \
+	 $(MAKE) -f $(SRCDIR)/src/Makefile $(notdir $@) \
+	 	SRCDIR="$(SRCDIR)" DLLFLAGS="" \
+	)
+
+# ELF
+
+.PHONY: sharedlib/libvga.so.$(VERSION) sharedlib/libvgagl.so.$(VERSION)
+
+shared: $(SHAREDLIBS) $(SVGALIBSHAREDSTUBS)
+
+sharedlib/libvga.so.$(VERSION): $(SHAREDDIRS)
+	@rm -f sharedlib/DISTRIBUTION
+	(cd $(dir $@); \
+	 $(MAKE) -f $(SRCDIR)/src/Makefile $(notdir $@) \
+	 	SRCDIR="$(SRCDIR)" DLLFLAGS="$(DLLFLAGS)" \
+	)
+
+sharedlib/libvgagl.a sharedlib/libvgagl.so.$(VERSION): $(SHAREDDIRS)
+	(cd $(dir $@); \
+	 $(MAKE) -f $(SRCDIR)/gl/Makefile $(notdir $@) \
+	 	SRCDIR="$(SRCDIR)" DLLFLAGS="$(DLLFLAGS)" \
+	)
+
+demoprogs: $(PREDEMO) $(DEMODIRS)
+	@for dir in $(DEMODIRS); do \
+		if [ -d $(SRCDIR)/$$dir ]; then \
+			(cd $$dir; \
+			$(MAKE) -f $(SRCDIR)/$$dir/Makefile SRCDIR="$(SRCDIR)"); \
+		fi; \
+	done
+
+textutils: $(UTILDIRS)
+	(cd utils; \
+	$(MAKE) -f $(SRCDIR)/utils/Makefile SRCDIR="$(SRCDIR)")
+
+lrmi:
+	(cd lrmi-0.6m;\
+	$(MAKE))
+
+backup: $(BACKUP)
+
+$(BACKUP):
+# I tried using a dependency, but make reordered them
+# thus I have to do it this way:
+	$(MAKE) shared
+	$(MAKE) distclean
+
+	sed 's/^TARGET_FORMAT = a.out$$/# TARGET_FORMAT = a.out/' \
+		$(SRCDIR)/Makefile.cfg | \
+	sed 's/^#[ 	]*TARGET_FORMAT = elf$$/TARGET_FORMAT = elf/' \
+		> mkcfg ; \
+	mv mkcfg $(SRCDIR)/Makefile.cfg; \
+	(cd ..; \
+	find svgalib-$(VERSION) ! -type d -print | sort | tar -cvf- -T- ) \
+		| gzip -9 >$(BACKUP)
+
+distclean:
+	(cd $(SRCDIR)/doc; $(MAKE) clean)
+	(cd $(SRCDIR)/doc; $(MAKE) ../0-README)
+	(cd $(SRCDIR)/src; $(MAKE) clean)
+	(cd $(SRCDIR)/gl; $(MAKE) clean)
+	(cd $(SRCDIR)/utils; $(MAKE) clean)
+	(cd $(SRCDIR)/demos; $(MAKE) clean)
+	(cd $(SRCDIR)/threeDKit; $(MAKE) clean)
+	(cd $(SRCDIR)/lrmi-0.6m; $(MAKE) clean)
+	(cd $(SRCDIR)/kernel/svgalib_helper; $(MAKE) clean)
+	rm -f *.orig
+	find . \( -name '.depend*' -o -name '*~*' \) -exec rm {} \;
+	rm -rf sharedlib/[!l]* sharedlib/l[!i]* sharedlib/li[!b]* staticlib
+	rm -rf sharedlib/*.a core
+	mkdir -p sharedlib
+	touch sharedlib/DISTRIBUTION
+
+clean: distclean
+	rm -rf sharedlib
+
+indent:
+	find demos gl mach src support -name '*.[ch]' -exec indent -kr {} \;
+	indent -kr src/*.regs
+
+indent-gnu:
+	find demos gl mach src support -name '*.[ch]' -exec indent -gnu {} \;
+	indent -gnu src/*.regs
+
+FORCE:
diff -Naur svgalib-1.9.21/Makefile.cfg svgalib-1.9.21-decebal/Makefile.cfg
--- svgalib-1.9.21/Makefile.cfg	2005-04-14 20:21:02.000000000 +0000
+++ svgalib-1.9.21-decebal/Makefile.cfg	2005-05-19 04:53:40.000000000 +0000
@@ -44,7 +44,7 @@
 # Common prefix for installation directories.
 # NOTE: This directory must exist when you start the install.
 TOPDIR=
-prefix = $(TOPDIR)/usr/local
+prefix = $(TOPDIR)/usr
 exec_prefix = $(prefix)
 
 # Directory where the shared stubs and static library will be installed.
@@ -130,7 +130,7 @@
 # MAKEWHATIS = makewhatis # Beware, this will really need a few minutes!
 
 # Comment this out if you use devfs only and don't want to make svga nodes
-INSTALLDEV = installdev
+#INSTALLDEV = installdev
 
 # Select which makefile to use to install the module, or comment both out if
 # you are going to install the kernel module manually
diff -Naur svgalib-1.9.21/src/Makefile svgalib-1.9.21-decebal/src/Makefile
--- svgalib-1.9.21/src/Makefile	2005-02-03 11:31:43.000000000 +0000
+++ svgalib-1.9.21-decebal/src/Makefile	2005-05-19 04:53:06.000000000 +0000
@@ -472,8 +472,8 @@
 	$(CC) $(CFLAGS) $(VGA_DEFINES) -c -o $@ $<
 
 #lrmi must NOT be compiled as -fPIC
-lrmi.o: lrmi.c
-	$(CC) $(CFLAGS:-fPIC=) -c -o $@ $<
+#lrmi.o: lrmi.c
+#	$(CC) $(CFLAGS:-fPIC=) -c -o $@ $<
 
 $(RAMDAC): %.o: %.c
 	$(CC) $(CFLAGS) $(RAMDAC_DEFINES) -c -o $@ $<
diff -Naur svgalib-1.9.21/src/Makefile~ svgalib-1.9.21-decebal/src/Makefile~
--- svgalib-1.9.21/src/Makefile~	1970-01-01 00:00:00.000000000 +0000
+++ svgalib-1.9.21-decebal/src/Makefile~	2005-02-03 11:31:43.000000000 +0000
@@ -0,0 +1,533 @@
+#----------------------------------------------------------------------
+# Makefile for the main svgalib source.
+#----------------------------------------------------------------------
+
+# *** NO SERVICIBLE PARTS HERE!
+#     All options are in Makefile.cfg.
+
+include ../Makefile.cfg
+
+srcdir    = ..
+VPATH     = $(srcdir)/src
+
+#----------------------------------------------------------------------
+# Compiler Section (overrides Makefile.cfg)
+#----------------------------------------------------------------------
+
+INCLUDES += -I$(srcdir)/src
+
+#----------------------------------------------------------------------
+# Rules Section
+#----------------------------------------------------------------------
+
+DRIVERS = vgadrv.o regextr.o modetab.o
+MODULES = vga.o vgaio.o \
+          vgadraw.o vgaclear.o vgaline.o vgapix.o \
+          vgapal.o vgacol.o vgamodesel.o vgamisc.o \
+	  vgadump.o vgaconvplanar.o vgaaccel.o \
+	  timing.o vgaregs.o interface.o accel.o \
+	  vgapci.o vga_helper.o \
+	  vga_console.o vgarelvgaio.o vgammvgaio.o vgacursor.o \
+	  vganullio.o
+MOUSE   = mouse/mouse.o
+KEYBOARD = keyboard/keyboard.o
+JOYSTICK = joystick/joystick.o
+RAMDAC	= ramdac/ramdac.o ramdac/normal.o ramdac/attdacs.o ramdac/sierra.o \
+          ramdac/icw.o ramdac/s3dacs.o ramdac/IBMRGB52x.o ramdac/ics_gendac.o
+CLOCKCHIP = clockchip/icd2061a.o
+
+# defines for all files.
+ifeq (y, $(NO_ASM))
+  DEFINES += -DNO_ASSEMBLY
+endif
+ifeq (y, $(NO_HELPER))
+  DEFINES += -DNOHELPER
+endif
+ifdef SVGALIB_CONFIG_FILE
+  DEFINES += -DSVGALIB_CONFIG_FILE=\"$(SVGALIB_CONFIG_FILE)\"
+endif
+ifdef ALLOW_MOUSE_OVERRIDE
+  DEFINES += -DALLOW_MOUSE_OVERRIDE
+endif
+ifdef DEBUG
+  DEFINES += -DDEBUG
+endif
+ifdef DEBUG_ACCEL
+  DEFINES += -DDEBUG_ACCEL
+endif
+ifdef DEBUG_KEYBOARD
+  DEFINES += -DDEBUG_KEYBOARD
+endif
+ifdef NO_DELAY
+  DEFINES += -DNO_DELAY
+endif
+ifdef LIBC_MEMCPY
+  DEFINES += -DLIBC_MEMCPY
+endif
+
+# defines for vga.c only.
+ifdef ROOT_VC_SHORTCUT
+  VGA_DEFINES += -DROOT_VC_SHORTCUT
+endif
+
+ifdef DEBUG_CONF
+  DEFINES += -DDEBUG_CONF
+endif
+
+ifdef INCLUDE_ET4000_DRIVER
+  VGA_DEFINES += -DINCLUDE_ET4000_DRIVER
+  DRIVERS += drivers/et4000.o drivers/et4000hico.o 
+  ifdef INCLUDE_ET4000_DRIVER_TEST
+    VGA_DEFINES += -DINCLUDE_ET4000_DRIVER_TEST
+  endif
+  ifdef ET4000_REGS
+    DEFINES += -DET4000_REGS=\"$(ET4000_REGS)\"
+  endif
+  ifdef USE_CLOCKS
+    DEFINES += -DUSE_CLOCKS
+  endif
+endif
+ifdef INCLUDE_CIRRUS_DRIVER
+  VGA_DEFINES += -DINCLUDE_CIRRUS_DRIVER
+  DRIVERS += drivers/cirrus.o
+  ifdef INCLUDE_CIRRUS_DRIVER_TEST
+    VGA_DEFINES += -DINCLUDE_CIRRUS_DRIVER_TEST
+  endif
+endif
+ifdef INCLUDE_TVGA_DRIVER
+  VGA_DEFINES += -DINCLUDE_TVGA_DRIVER
+  DRIVERS += drivers/tvga8900.o
+  ifdef INCLUDE_TVGA_DRIVER_TEST
+    VGA_DEFINES += -DINCLUDE_TVGA_DRIVER_TEST
+  endif
+endif
+ifdef INCLUDE_TRIDENT_DRIVER
+  VGA_DEFINES += -DINCLUDE_TRIDENT_DRIVER
+  DRIVERS += drivers/trident.o
+  ifdef INCLUDE_TRIDENT_DRIVER_TEST
+    VGA_DEFINES += -DINCLUDE_TRIDENT_DRIVER_TEST
+  endif
+endif
+ifdef INCLUDE_OAK_DRIVER
+  VGA_DEFINES += -DINCLUDE_OAK_DRIVER
+  DRIVERS += drivers/oak.o
+  ifdef INCLUDE_OAK_DRIVER_TEST
+    VGA_DEFINES += -DINCLUDE_OAK_DRIVER_TEST
+  endif
+endif
+ifdef INCLUDE_EGA_DRIVER
+  VGA_DEFINES += -DINCLUDE_EGA_DRIVER
+  DRIVERS += drivers/egadrv.o
+  ifdef INCLUDE_EGA_DRIVER_TEST
+    VGA_DEFINES += -DINCLUDE_EGA_DRIVER_TEST
+  endif
+  ifdef EGA_REGS
+    DEFINES += -DEGA_REGS=\"$(EGA_REGS)\"
+  endif
+endif
+ifdef INCLUDE_MACH32_DRIVER
+  VGA_DEFINES += -DINCLUDE_MACH32_DRIVER
+  DRIVERS += drivers/mach32.o
+  ifdef INCLUDE_MACH32_DRIVER_TEST
+    VGA_DEFINES += -DINCLUDE_MACH32_DRIVER_TEST
+  endif
+endif
+ifdef INCLUDE_S3_DRIVER
+  VGA_DEFINES += -DINCLUDE_S3_DRIVER
+  DRIVERS += drivers/s3.o
+  ifdef INCLUDE_S3_DRIVER_TEST
+    VGA_DEFINES += -DINCLUDE_S3_DRIVER_TEST
+  endif
+endif
+ifdef INCLUDE_ET3000_DRIVER
+  VGA_DEFINES += -DINCLUDE_ET3000_DRIVER
+  DRIVERS += drivers/et3000.o
+  ifdef INCLUDE_ET3000_DRIVER_TEST
+    VGA_DEFINES += -DINCLUDE_ET3000_DRIVER_TEST
+  endif
+endif
+ifdef INCLUDE_GVGA6400_DRIVER
+  VGA_DEFINES += -DINCLUDE_GVGA6400_DRIVER
+  DRIVERS += drivers/gvga6400.o
+  ifdef INCLUDE_GVGA6400_DRIVER_TEST
+    VGA_DEFINES += -DINCLUDE_GVGA6400_DRIVER_TEST
+  endif
+endif
+ifdef INCLUDE_ARK_DRIVER
+  VGA_DEFINES += -DINCLUDE_ARK_DRIVER
+  DRIVERS += drivers/ark.o
+  ifdef INCLUDE_ARK_DRIVER_TEST
+    VGA_DEFINES += -DINCLUDE_ARK_DRIVER_TEST
+  endif
+endif
+ifdef INCLUDE_ATI_DRIVER
+  VGA_DEFINES += -DINCLUDE_ATI_DRIVER
+  DRIVERS += drivers/ati.o
+  ifdef INCLUDE_ATI_DRIVER_TEST
+    VGA_DEFINES += -DINCLUDE_ATI_DRIVER_TEST
+  endif
+endif
+ifdef INCLUDE_ALI_DRIVER
+  VGA_DEFINES += -DINCLUDE_ALI_DRIVER
+  DRIVERS += drivers/ali.o
+  ifdef INCLUDE_ALI_DRIVER_TEST
+    VGA_DEFINES += -DINCLUDE_ALI_DRIVER_TEST
+  endif
+endif
+ifdef INCLUDE_MACH64_DRIVER
+  VGA_DEFINES +=-DINCLUDE_MACH64_DRIVER
+  DRIVERS += drivers/mach64.o
+  ifdef INCLUDE_MACH64_DRIVER_TEST
+    VGA_DEFINES += -DINCLUDE_MACH64_DRIVER_TEST
+  endif
+endif
+ifdef INCLUDE_CHIPS_DRIVER
+  VGA_DEFINES +=-DINCLUDE_CHIPS_DRIVER
+  DRIVERS += drivers/chips.o
+  ifdef INCLUDE_CHIPS_DRIVER_TEST
+    VGA_DEFINES += -DINCLUDE_CHIPS_DRIVER_TEST
+  endif
+endif
+ifdef INCLUDE_APM_DRIVER
+  VGA_DEFINES +=-DINCLUDE_APM_DRIVER
+  DRIVERS += drivers/apm.o
+  ifdef INCLUDE_APM_DRIVER_TEST
+    VGA_DEFINES += -DINCLUDE_APM_DRIVER_TEST
+  endif
+endif
+ifdef INCLUDE_VESA_DRIVER
+  VGA_DEFINES +=-DINCLUDE_VESA_DRIVER
+  DRIVERS += drivers/vesa.o lrmi.o
+  ifdef INCLUDE_VESA_DRIVER_TEST
+    VGA_DEFINES += -DINCLUDE_VESA_DRIVER_TEST
+  endif
+endif
+ifdef INCLUDE_NV3_DRIVER
+  VGA_DEFINES +=-DINCLUDE_NV3_DRIVER
+  DRIVERS += drivers/nv3.o
+  ifdef INCLUDE_NV3_DRIVER_TEST
+    VGA_DEFINES += -DINCLUDE_NV3_DRIVER_TEST
+  endif
+endif
+ifdef INCLUDE_SAVAGE_DRIVER
+  VGA_DEFINES +=-DINCLUDE_SAVAGE_DRIVER
+  DRIVERS += drivers/savage.o
+  ifdef INCLUDE_SAVAGE_DRIVER_TEST
+    VGA_DEFINES += -DINCLUDE_SAVAGE_DRIVER_TEST
+  endif
+endif
+ifdef INCLUDE_G400_DRIVER
+  VGA_DEFINES +=-DINCLUDE_G400_DRIVER
+  DRIVERS += drivers/g400.o
+  ifdef INCLUDE_G400_DRIVER_TEST
+    VGA_DEFINES += -DINCLUDE_G400_DRIVER_TEST
+  endif
+endif
+ifdef INCLUDE_PM2_DRIVER
+  VGA_DEFINES +=-DINCLUDE_PM2_DRIVER
+  DRIVERS += drivers/pm2.o
+  ifdef INCLUDE_PM2_DRIVER_TEST
+    VGA_DEFINES += -DINCLUDE_PM2_DRIVER_TEST
+  endif
+endif
+ifdef INCLUDE_UNICHROME_DRIVER
+  VGA_DEFINES +=-DINCLUDE_UNICHROME_DRIVER
+  DRIVERS += drivers/unichrome.o
+  ifdef INCLUDE_UNICHROME_DRIVER_TEST
+    VGA_DEFINES += -DINCLUDE_UNICHROME_DRIVER_TEST
+  endif
+endif
+ifdef INCLUDE_G450C2_DRIVER
+  VGA_DEFINES +=-DINCLUDE_G450C2_DRIVER
+  DRIVERS += drivers/g450c2.o
+  ifdef INCLUDE_G450C2_DRIVER_TEST
+    VGA_DEFINES += -DINCLUDE_G450C2_DRIVER_TEST
+  endif
+endif
+ifdef INCLUDE_MILLENNIUM_DRIVER
+  VGA_DEFINES +=-DINCLUDE_MILLENNIUM_DRIVER
+  DRIVERS += drivers/millennium.o
+  ifdef INCLUDE_MILLENNIUM_DRIVER_TEST
+    VGA_DEFINES += -DINCLUDE_MILLENNIUM_DRIVER_TEST
+  endif
+endif
+ifdef INCLUDE_R128_DRIVER
+  VGA_DEFINES +=-DINCLUDE_R128_DRIVER
+  DRIVERS += drivers/r128.o
+  ifdef INCLUDE_R128_DRIVER_TEST
+    VGA_DEFINES += -DINCLUDE_R128_DRIVER_TEST
+  endif
+endif
+ifdef INCLUDE_MX_DRIVER
+  VGA_DEFINES +=-DINCLUDE_MX_DRIVER
+  DRIVERS += drivers/mx.o
+  ifdef INCLUDE_MX_DRIVER_TEST
+    VGA_DEFINES += -DINCLUDE_MX_DRIVER_TEST
+  endif
+endif
+ifdef INCLUDE_PARADISE_DRIVER
+  VGA_DEFINES +=-DINCLUDE_PARADISE_DRIVER
+  DRIVERS += drivers/paradise.o
+  ifdef INCLUDE_PARADISE_DRIVER_TEST
+    VGA_DEFINES += -DINCLUDE_PARADISE_DRIVER_TEST
+  endif
+endif
+ifdef INCLUDE_RAGE_DRIVER
+  VGA_DEFINES +=-DINCLUDE_RAGE_DRIVER
+  DRIVERS += drivers/rage.o
+  ifdef INCLUDE_RAGE_DRIVER_TEST
+    VGA_DEFINES += -DINCLUDE_RAGE_DRIVER_TEST
+  endif
+endif
+ifdef INCLUDE_BANSHEE_DRIVER
+  VGA_DEFINES +=-DINCLUDE_BANSHEE_DRIVER
+  DRIVERS += drivers/banshee.o
+  ifdef INCLUDE_BANSHEE_DRIVER_TEST
+    VGA_DEFINES += -DINCLUDE_BANSHEE_DRIVER_TEST
+  endif
+endif
+ifdef INCLUDE_SIS_DRIVER
+  VGA_DEFINES +=-DINCLUDE_SIS_DRIVER
+  DRIVERS += drivers/sis.o
+  ifdef INCLUDE_SIS_DRIVER_TEST
+    VGA_DEFINES += -DINCLUDE_SIS_DRIVER_TEST
+  endif
+endif
+ifdef INCLUDE_I740_DRIVER
+  VGA_DEFINES +=-DINCLUDE_I740_DRIVER
+  DRIVERS += drivers/i740.o
+  ifdef INCLUDE_I740_DRIVER_TEST
+    VGA_DEFINES += -DINCLUDE_I740_DRIVER_TEST
+  endif
+endif
+ifdef INCLUDE_I810_DRIVER
+  VGA_DEFINES +=-DINCLUDE_I810_DRIVER
+  DRIVERS += drivers/i810.o
+  ifdef INCLUDE_I810_DRIVER_TEST
+    VGA_DEFINES += -DINCLUDE_I810_DRIVER_TEST
+  endif
+endif
+ifdef INCLUDE_LAGUNA_DRIVER
+  VGA_DEFINES +=-DINCLUDE_LAGUNA_DRIVER
+  DRIVERS += drivers/laguna.o
+  ifdef INCLUDE_LAGUNA_DRIVER_TEST
+    VGA_DEFINES += -DINCLUDE_LAGUNA_DRIVER_TEST
+  endif
+endif
+ifdef INCLUDE_ET6000_DRIVER
+  VGA_DEFINES += -DINCLUDE_ET6000_DRIVER
+  DRIVERS += drivers/et6000.o
+  ifdef INCLUDE_ET6000_DRIVER_TEST
+    VGA_DEFINES += -DINCLUDE_ET6000_DRIVER_TEST
+  endif
+endif
+ifdef INCLUDE_NEO_DRIVER
+  VGA_DEFINES += -DINCLUDE_NEO_DRIVER
+  DRIVERS += drivers/neo.o
+  ifdef INCLUDE_NEO_DRIVER_TEST
+    VGA_DEFINES += -DINCLUDE_NEO_DRIVER_TEST
+  endif
+endif
+ifdef INCLUDE_FBDEV_DRIVER
+  VGA_DEFINES += -DINCLUDE_FBDEV_DRIVER
+  DRIVERS += drivers/fbdev.o
+  ifdef INCLUDE_FBDEV_DRIVER_TEST
+    VGA_DEFINES += -DINCLUDE_FBDEV_DRIVER_TEST
+  endif
+endif
+ifdef INCLUDE_RENDITION_DRIVER
+  VGA_DEFINES += -DINCLUDE_RENDITION_DRIVER
+  DRIVERS += drivers/rendition.o
+  ifdef INCLUDE_RENDITION_DRIVER_TEST
+    VGA_DEFINES += -DINCLUDE_RENDITION_DRIVER_TEST
+  endif
+endif
+
+# DYNAMIC is used by both ET drivers.
+ifdef DYNAMIC
+    ifdef INCLUDE_ET4000_DRIVER
+      DEFINES += -DDYNAMIC
+    endif
+endif
+
+# defines for ramdac.c, ramdac.h (and files including it) only.
+ifdef INCLUDE_NORMAL_DAC
+  RAMDAC_DEFINES += -DINCLUDE_NORMAL_DAC
+  ifdef INCLUDE_NORMAL_DAC_TEST
+    RAMDAC_DEFINES += -DINCLUDE_NORMAL_DAC_TEST
+  endif
+endif
+ifdef INCLUDE_S3_SDAC_DAC
+  RAMDAC_DEFINES += -DINCLUDE_S3_SDAC_DAC
+  ifdef INCLUDE_S3_SDAC_DAC_TEST
+    RAMDAC_DEFINES += -DINCLUDE_S3_SDAC_DAC_TEST
+  endif
+endif
+ifdef INCLUDE_S3_GENDAC_DAC
+  RAMDAC_DEFINES += -DINCLUDE_S3_GENDAC_DAC
+  ifdef INCLUDE_S3_GENDAC_DAC_TEST
+    RAMDAC_DEFINES += -DINCLUDE_S3_GENDAC_DAC_TEST
+  endif
+endif
+ifdef INCLUDE_S3_TRIO64_DAC
+  RAMDAC_DEFINES += -DINCLUDE_S3_TRIO64_DAC
+  ifdef INCLUDE_S3_TRIO64_DAC_TEST
+    RAMDAC_DEFINES += -DINCLUDE_S3_TRIO64_DAC_TEST
+  endif
+endif
+ifdef INCLUDE_SIERRA_DAC
+  RAMDAC_DEFINES += -DINCLUDE_SIERRA_DAC
+  ifdef INCLUDE_SIERRA_DAC_TEST
+    RAMDAC_DEFINES += -DINCLUDE_SIERRA_DAC_TEST
+  endif
+endif
+ifdef INCLUDE_SC15025_DAC
+  RAMDAC_DEFINES += -DINCLUDE_SC15025_DAC
+  ifdef INCLUDE_SC15025_DAC_TEST
+    RAMDAC_DEFINES += -DINCLUDE_SC15025_DAC_TEST
+  endif
+endif
+ifdef INCLUDE_ATT20C490_DAC
+  RAMDAC_DEFINES += -DINCLUDE_ATT20C490_DAC
+  ifdef INCLUDE_ATT20C490_DAC_TEST
+    RAMDAC_DEFINES += -DINCLUDE_ATT20C490_DAC_TEST
+  endif
+endif
+ifdef INCLUDE_ATT20C498_DAC
+  RAMDAC_DEFINES += -DINCLUDE_ATT20C498_DAC
+  ifdef INCLUDE_ATT20C498_DAC_TEST
+    RAMDAC_DEFINES += -DINCLUDE_ATT20C498_DAC_TEST
+  endif
+endif
+ifdef INCLUDE_ICW_DAC
+  RAMDAC_DEFINES += -DINCLUDE_ICW_DAC
+  ifdef INCLUDE_ICW_DAC_TEST
+    RAMDAC_DEFINES += -DINCLUDE_ICW_DAC_TEST
+  endif
+endif
+ifdef INCLUDE_IBMRGB52x_DAC
+  RAMDAC_DEFINES += -DINCLUDE_IBMRGB52x_DAC
+  ifdef INCLUDE_IBMRGB52x_DAC_TEST
+    RAMDAC_DEFINES += -DINCLUDE_IBMRGB52x_DAC_TEST
+  endif
+endif
+ifdef INCLUDE_SC1148X_DAC
+  RAMDAC_DEFINES += -DINCLUDE_SC1148X_DAC
+  ifdef INCLUDE_SC1148X_DAC_TEST
+    RAMDAC_DEFINES += -DINCLUDE_SC1148X_DAC_TEST
+  endif
+endif
+ifdef INCLUDE_ICS_GENDAC_DAC
+  RAMDAC_DEFINES += -DINCLUDE_ICS_GENDAC_DAC
+  ifdef INCLUDE_ICS_GENDAC_DAC_TEST
+    RAMDAC_DEFINES += -DINCLUDE_ICS_GENDAC_DAC_TEST
+  endif
+endif
+
+ALLOBJS = $(MODULES) $(MOUSE) $(JOYSTICK) $(KEYBOARD) $(RAMDAC) $(CLOCKCHIP) $(DRIVERS)
+
+.c.o:
+	$(CC) $(CFLAGS) -c -o $*.o $<
+
+.c.s:
+	$(CC) $(CFLAGS) -S -o $*.s $<
+
+.PHONY:	all dep depadd clean install FORCE
+
+
+
+ifeq (a.out, $(TARGET_FORMAT))
+
+all:	libvga.a
+
+else                                                               
+
+all:	libvga.so.$(VERSION)
+
+# These rules are for ELF only.
+libvga.so.$(VERSION): $(ALLOBJS)
+	$(CC) -shared -Wl,-soname,libvga.so.$(MAJOR_VER) \
+	-Xlinker --retain-symbols-file -Xlinker ../src/exports \
+	-Wl,-Bsymbolic -o libvga.so.$(VERSION) $(ALLOBJS) -lm
+
+$(sharedlibdir)/libvga.so.$(VERSION): libvga.so.$(VERSION)
+	$(INSTALL_SHLIB) $< $(sharedlibdir)/$<
+	ldconfig
+
+install: $(sharedlibdir)/libvga.so.$(VERSION)
+
+endif	  
+
+libvga.a: $(ALLOBJS)
+	rm -f libvga.a
+	$(AR) rcs libvga.a $(ALLOBJS)
+
+libvgagl.a: FORCE
+	make -f $(srcdir)/gl/Makefile $@ srcdir="$(srcdir)" DLLFLAGS="$(DLLFLAGS)"
+
+svgalib_helper.h:
+	@ln -sf ../kernel/svgalib_helper/svgalib_helper.h ../src
+
+vga.o: vga.c
+	$(CC) $(CFLAGS) $(VGA_DEFINES) -c -o $@ $<
+
+#lrmi must NOT be compiled as -fPIC
+lrmi.o: lrmi.c
+	$(CC) $(CFLAGS:-fPIC=) -c -o $@ $<
+
+$(RAMDAC): %.o: %.c
+	$(CC) $(CFLAGS) $(RAMDAC_DEFINES) -c -o $@ $<
+
+drivers/s3.o drivers/ark.o: %.o: %.c
+	$(CC) $(CFLAGS) $(RAMDAC_DEFINES) -c -o $@ $<
+
+nucleus.o: %.o: %.c 
+	$(CC) $(CFLAGS) $(RAMDAC_DEFINES) -c -o $@ $< scitech.o
+
+$(MODULES): .depend.src
+
+dep:
+	rm -f .depend.src
+	make .depend.src
+
+.depend.src:
+	@ln -sf ../kernel/svgalib_helper/svgalib_helper.h ../src
+	echo '# Module dependencies' >>.depend.src
+	$(CC) $(INCLUDES) -MM $(patsubst %.o,$(srcdir)/src/%.c,$(MODULES)) >>.depend.src
+	echo '# Mouse dependencies' >>.depend.src
+	$(CC) $(INCLUDES) -MM $(patsubst %.o,$(srcdir)/src/%.c,$(MOUSE)) >.depend.src.mouse
+	sed 's#^\(.*\.o\):#mouse/\1:#g' <.depend.src.mouse >>.depend.src
+	rm -f .depend.src.mouse
+	echo '# Joystick dependencies' >>.depend.src
+	$(CC) $(INCLUDES) -MM $(patsubst %.o,$(srcdir)/src/%.c,$(JOYSTICK)) >.depend.src.joystick
+	sed 's#^\(.*\.o\):#joystick/\1:#g' <.depend.src.joystick >>.depend.src
+	rm -f .depend.src.joystick
+	echo '# Keyboard dependencies' >>.depend.src
+	$(CC) $(INCLUDES) -MM $(patsubst %.o,$(srcdir)/src/%.c,$(KEYBOARD)) >.depend.src.keyboard
+	sed 's#^\(.*\.o\):#keyboard/\1:#g' <.depend.src.keyboard >>.depend.src
+	rm -f .depend.src.keyboard
+	echo '# Driver dependencies' >>.depend.src
+	$(CC) $(INCLUDES) -MM $(patsubst %.o,$(srcdir)/src/%.c,$(DRIVERS)) >>.depend.src
+	echo '# Ramdac dependencies' >>.depend.src
+	$(CC) $(INCLUDES) -MM $(patsubst %.o,$(srcdir)/src/%.c,$(RAMDAC)) >.depend.src.ramdac
+	sed 's#^\(.*\.o\):#ramdac/\1:#g' <.depend.src.ramdac >>.depend.src
+	rm -f .depend.src.ramdac
+	echo '# Clockchip dependencies' >>.depend.src
+	$(CC) $(INCLUDES) -MM $(patsubst %.o,$(srcdir)/src/%.c,$(CLOCKCHIP)) >.depend.src.clockchip
+	sed 's#^\(.*\.o\):#clockchip/\1:#g' <.depend.src.clockchip >>.depend.src
+	rm -f .depend.src.clockchip
+
+clean:
+	rm -f .depend.src *~ *.o mouse/*.o keyboard/*.o mouse/*~ keyboard/*~ \
+		ramdac/*.o clockchip/*.o ramdac/*~ clockchip/*~ \
+		libvga.a libvga.so.$(VERSION) *.bak */*.bak */*.orig *.orig \
+		svgalib_helper.h
+
+FORCE: # dummy target.
+
+#
+# include a dependency file if one exists
+#
+ifeq (.depend.src,$(wildcard .depend.src))
+include .depend.src
+endif
