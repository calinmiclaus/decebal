#!/bin/bash

[ "$USECOLORS" = "yes" ] && WHITE="\033[1;37m" || WHITE="\033[1;0m"
[ "$USECOLORS" = "yes" ] && GREEN="\033[0;32m" || GREEN="\033[1;0m"
[ "$USECOLORS" = "yes" ] && RED="\033[1;31m" || RED="\033[1;0m"
[ "$USECOLORS" = "yes" ] && YELLOW="\033[1;33m" || YELLOW="\033[1;0m"
[ "$USECOLORS" = "yes" ] && NORMAL="\033[1;0m" || NORMAL="\033[1;0m"

play_sound() {
  if [ "$SOUND" = "yes" -a -n "`type -p play`" ]
  then
    case "$1" in
      success) play $FUNCTIONSDIR/dpack/sounds/success.wav ;;
      failure) play $FUNCTIONSDIR/dpack/sounds/failure.wav ;;
      warning) play $FUNCTIONSDIR/dpack/sounds/warning.wav ;;
      start)   play $FUNCTIONSDIR/dpack/sounds/start.wav ;;
      end)     play $FUNCTIONSDIR/dpack/sounds/end.wav ;;
      *) true ;;
    esac
  fi
}

msg_start() {
  echo -e "${GREEN}[${NORMAL}+${GREEN}]${NORMAL} $@"
}

msg_start_nnl() {
  echo -en "${GREEN}[${NORMAL}+${GREEN}]${NORMAL} $@"
  if [ "$PKG_VERBOSE" = "1" ]
  then
    echo
  fi
}

msg() {
  echo -en "    ${GREEN}[${NORMAL}-${GREEN}]${NORMAL} $@"
  if [ "$PKG_VERBOSE" = "1" ]
  then
    echo
  fi
}						  

msg_nnl() {
  echo -en "    ${GREEN}[${NORMAL}-${GREEN}]${NORMAL} $@"
}

msg_error() {
  echo -e "${WHITE}[${RED}ERROR${WHITE}] ${NORMAL}$@"
}

msg_warning() {
  echo -e "${WHITE}[${YELLOW}WARNING${WHITE}] ${NORMAL}$@"
}

msg_verbose() {
  if [ "$PKG_VERBOSE" = "1" ]
  then
    echo -en "    ${GREEN}[${NORMAL}-${GREEN}] ${NORMAL}$@"
  else
    return 1
  fi
}

msg_verbose_nnl() {
  if [ "$PKG_VERBOSE" = "1" ]
  then
    echo -en "    ${GREEN}[${NORMAL}-${GREEN}] ${NORMAL}$@"
  fi
}

msg_child() {
  if [ "$PKG_VERBOSE" = "1" ]
  then
    echo -en "         ${GREEN}-> ${NORMAL}$@"
  fi	    
}

msg_ok() {
  if [ ! "$PKG_VERBOSE" = "1" ]
  then
    echo -e "[ ${GREEN}OK ${NORMAL}]"
  fi
}

msg_ok_verbose() {
  if [ "$PKG_VERBOSE" = "1" ]
  then
    echo -e "[ ${GREEN}OK ${NORMAL}]"
  fi
}

msg_passed() {
  if [ "$PKG_VERBOSE" != "1" ]
  then
    echo -e "[ ${GREEN}PASSED ${NORMAL}]"
  fi
}

msg_passed_verbose() {
  if [ "$PKG_VERBOSE" = "1" ]
  then
    echo -e "[ ${GREEN}PASSED ${NORMAL}]"
  fi
}

msg_failed() {
  if [ "$PKG_VERBOSE" != "1" ]
  then
    echo -e "[ ${RED}FAILED ${NORMAL}]"
  fi
}
	  
msg_failed_verbose() {
  if [ "$PKG_VERBOSE" = "1" ]
  then
    echo -e "[ ${RED}FAILED ${NORMAL}]"
  fi
}

msg_corrupt_verbose() {
  if [ "$PKG_VERBOSE" = "1" ]
  then
    echo -e "[ ${RED}CORRUPT ${NORMAL}]"
  fi
}

msg_done() {
  if [ "$PKG_VERBOSE" != "1" ]
  then
    echo -e "[ ${GREEN}DONE ${NORMAL}]"
  fi
}
	  
msg_done_verbose() {
  if [ "$PKG_VERBOSE" = "1" ]
  then
    echo -e "[ ${GREEN}DONE ${NORMAL}]"
  fi
}

msg_notfound_verbose() {
  if [ "$PKG_VERBOSE" = "1" ]
  then
    echo -e "[ ${RED}NOT FOUND ${NORMAL}]"
  fi
}
	  
msg_building_verbose() {
  if [ "$PKG_VERBOSE" = "1" ]
  then
    echo -e "[ ${YELLOW}BUILDING ${NORMAL}]"
  fi
}
		    
msg_syncing_verbose() {
  if [ "$PKG_VERBOSE" = "1" ]
  then
    echo -e "[ ${YELLOW}SYNCING ${NORMAL}]"
  fi
}

msg_processing() {
  if [ "$PKG_VERBOSE" != "1" ]
  then
    echo -e "[ ${YELLOW}PROCESSING ${NORMAL}]"
  fi
}
	  
msg_downloading_verbose() {
  if [ "$PKG_VERBOSE" = "1" ]
  then
    echo -e "[ ${YELLOW}DOWNLOADING ${NORMAL}]"
  fi
}
		    
msg_localfile_verbose() {
  if [ "$PKG_VERBOSE" = "1" ]
  then
    echo -e "[ ${YELLOW}LOCALFILE ${NORMAL}]"
  fi
}
			      
msg_none() {
  echo -e "[ ${RED}NONE ${NORMAL}]"
}
				
msg_none_verbose() {
  if [ "$PKG_VERBOSE" = "1" ]
  then
    echo -e "[ ${RED}NONE ${NORMAL}]"
  fi
}

msg_building_verbose() {
  if [ "$PKG_VERBOSE" = "1" ]
  then
    echo -e "[ ${YELLOW}BUILDING ${NORMAL}]"
  fi
}

msg_syncing_verbose() {
  if [ "$PKG_VERBOSE" = "1" ]
  then
    echo -e "[ ${YELLOW}SYNCING ${NORMAL}]"
  fi
}

msg_found_verbose() {
  if [ "$PKG_VERBOSE" = "1" ]
  then
    echo -e "[ ${GREEN}FOUND ${NORMAL}]"
  fi
}

msg_notfound_verbose() {
  if [ "$PKG_VERBOSE" = "1" ]
  then
    echo -e "[ ${RED}MISSING ${NORMAL}]"
  fi
}

msg_handle_depends() {
  if [ "$PKG_BUILDDEPS" = "1" ]
  then
    msg_building_verbose
  elif [ "$PKG_SYNCDEPS" = "1" ]
  then
    msg_syncing_verbose
  else
    msg_notfound_verbose
  fi
}

msg_group_or_world() {
 echo -e "${YELLOW}===>      ${NORMAL}$@      ${YELLOW}<===${NORMAL}"
}

msg_resolve_depends() {
  echo -e "${GREEN}===>      ${NORMAL}$1 ${YELLOW}$2 ${NORMAL}dependencies      ${GREEN}<===${NORMAL}"
}
  
msg_continue_base_pkg() {
  echo -e "${GREEN}===>        ${NORMAL} continue ${YELLOW}$1 ${NORMAL}build         ${GREEN}<===${NORMAL}"
}

msg_replace_verbose() {
  if [ "$PKG_VERBOSE" = "1" ]
  then
    echo -e "[ ${YELLOW}DOING REPLACES${NORMAL} ]"
  fi
}
     					  			      		    	  		    	  	  